{"version":3,"sources":["webpack:///./src/plugins/gtwp-hktransit/index.js"],"names":["onload","Promise","resolve","reject","then","data","companies","$","ajax","url","cache","dataType","success","json","catch","error","company","transitType","id","name","HkTransitRoutesProvider","HkTransitStopsProvider","global","this","fetchDatabase","db","console","isDatabaseUpdateNeeded","versionStr","lastUpdated","version","parseInt","err"],"mappings":"yFAAA,2FAYO,SAASA,IAGZ,OAFA,WAAc,gBAAgB,GAC9B,WAAc,kBAAkB,GACzB,IAAIC,QAAQ,CAACC,EAASC,KACzB,IAA0B,kBAAkBC,MAAK,SAAUC,GACvD,OAAO,IAAIJ,QAAQ,CAACC,EAASC,KACrBE,EACAH,EAAQG,EAAKC,WAGjBC,EAAEC,KAAK,CACHC,IAAK,gDACLC,OAAO,EACPC,SAAU,OACVC,QAAS,SAAUC,GACf,IAA0B,iBAAkBA,GAAMT,MAAK,WACnDF,EAAQW,EAAKP,cACdQ,MAAMX,IAEbY,MAAO,WACHZ,YAIbC,MAAK,SAAUE,GACd,IAAK,IAAIU,KAAWV,EAAW,CAC3B,IAAIW,EACJ,OAAQD,EAAQE,IACZ,IAAK,QACDD,EAAc,QACd,MACJ,IAAK,MACDA,EAAc,UACd,MACJ,IAAK,QACL,IAAK,OACDA,EAAc,OACd,MACJ,QACIA,EAAc,MAEtB,mBAA+BA,EAAaD,EAAQE,GAAIF,EAAQG,KAAM,IAAIC,GAC1E,mBAA8BH,EAAaD,EAAQE,GAAIF,EAAQG,KAAM,IAAIE,GAE7EnB,GAAQ,MACTY,MAAMX,KAIjB,IAAIiB,EAA0B,WAC1B,IAAIE,EAASC,KAEbA,KAAKC,cAAgB,SAAUtB,EAASC,GACpCI,EAAEC,KAAK,CACHC,IAAK,kCAAoCa,EAAOJ,GAAK,eACrDR,OAAO,EACPC,SAAU,OACVC,QAAS,SAAUa,GACfvB,EAAQuB,IAEZV,MAAO,WACHW,QAAQX,MAAM,0BAA4BO,EAAOJ,GAAK,qBACtDhB,GAAQ,OAKpBqB,KAAKI,uBAAyB,SAAUzB,EAASC,EAAQyB,GACrDrB,EAAEC,KAAK,CACHC,IAAK,kCAAoCa,EAAOJ,GAAK,gBACrDR,OAAO,EACPC,SAAU,OACVC,QAAS,SAAUP,GACf,IAAIwB,EACAC,EACJ,IACID,EAAcE,SAAS1B,EAAKyB,SAC5BA,EAAUC,SAASH,GACrB,MAAOI,GACLN,QAAQX,MAAM,oCAAsCO,EAAOJ,GAAK,wEAChEhB,GAAQ,GAEZA,EAAQ2B,EAAcC,IAE1Bf,MAAO,SAAUiB,GACbN,QAAQX,MAAM,oCAAsCO,EAAOJ,GAAK,mBAEhEhB,GAAQ,MAGhBA,GAAQ,KAIZmB,EAAyB,WACzB,IAAIC,EAASC,KAEbA,KAAKC,cAAgB,SAAUtB,EAASC,GACpCI,EAAEC,KAAK,CACHC,IAAK,kCAAoCa,EAAOJ,GAAK,QACrDR,OAAO,EACPC,SAAU,OACVC,QAAS,SAAUa,GACfvB,EAAQuB,IAEZV,MAAO,WACHW,QAAQX,MAAM,0BAA4BO,EAAOJ,GAAK,oBACtDhB,GAAQ,OAKpBqB,KAAKI,uBAAyB,SAAUzB,EAASC,EAAQyB,GACrDrB,EAAEC,KAAK,CACHC,IAAK,kCAAoCa,EAAOJ,GAAK,gBACrDR,OAAO,EACPC,SAAU,OACVC,QAAS,SAAUP,GACf,IAAIwB,EACAC,EACJ,IACID,EAAcE,SAAS1B,EAAKyB,SAC5BA,EAAUC,SAASH,GACrB,MAAOI,GACLN,QAAQX,MAAM,oCAAsCO,EAAOJ,GAAK,uEAChEhB,GAAQ,GAEZA,EAAQ2B,EAAcC,IAE1Bf,MAAO,SAAUiB,GACbN,QAAQX,MAAM,oCAAsCO,EAAOJ,GAAK,kBAEhEhB,GAAQ,MAGhBA,GAAQ,M","file":"1.7369e83f3696b5f60190.js","sourcesContent":["//GTWP HK Transit Plugin\r\n\r\nimport * as Cors from '../../gtw-cors';\r\nimport * as Database from '../../gtw-db';\r\nimport * as TransitRoutes from '../../gtw-citydata-transit-routes';\r\nimport * as TransitStops from '../../gtw-citydata-transit-stops';\r\n\r\nfunction parseIsoDatetime(dtstr) {\r\n    var dt = dtstr.split(/[: T-]/).map(parseFloat);\r\n    return new Date(dt[0], dt[1] - 1, dt[2], dt[3] || 0, dt[4] || 0, dt[5] || 0, 0);\r\n}\r\n\r\nexport function onload() {\r\n    Cors.register(\"db.kmbeta.ml\", true);\r\n    Cors.register(\"rt.data.gov.hk\", true);\r\n    return new Promise((resolve, reject) => {\r\n        Database.getPluginStorage(\"gtwp-hktransit\").then(function (data) {\r\n            return new Promise((resolve, reject) => {\r\n                if (data) {\r\n                    resolve(data.companies);\r\n                    return;\r\n                }\r\n                $.ajax({\r\n                    url: \"https://db.kmbeta.ml/hktransit_companies.json\",\r\n                    cache: false,\r\n                    dataType: \"json\",\r\n                    success: function (json) {\r\n                        Database.putPluginStorage(\"gtwp-hktransit\", json).then(function () {\r\n                            resolve(json.companies);\r\n                        }).catch(reject);\r\n                    },\r\n                    error: function () {\r\n                        reject();\r\n                    }\r\n                });\r\n            });\r\n        }).then(function (companies) {\r\n            for (var company of companies) {\r\n                var transitType;\r\n                switch (company.id) {\r\n                    case \"FERRY\":\r\n                        transitType = \"ferry\";\r\n                        break;\r\n                    case \"GMB\":\r\n                        transitType = \"minibus\";\r\n                        break;\r\n                    case \"PTRAM\":\r\n                    case \"TRAM\":\r\n                        transitType = \"tram\";\r\n                        break;\r\n                    default:\r\n                        transitType = \"bus\";\r\n                }\r\n                TransitRoutes.registerProvider(transitType, company.id, company.name, new HkTransitRoutesProvider());\r\n                TransitStops.registerProvider(transitType, company.id, company.name, new HkTransitStopsProvider());\r\n            }\r\n            resolve(true);\r\n        }).catch(reject);\r\n    });\r\n};\r\n\r\nvar HkTransitRoutesProvider = function () {\r\n    var global = this;\r\n\r\n    this.fetchDatabase = function (resolve, reject) {\r\n        $.ajax({\r\n            url: \"https://db.kmbeta.ml/hktransit_\" + global.id + \"-routes.json\",\r\n            cache: false,\r\n            dataType: \"json\",\r\n            success: function (db) {\r\n                resolve(db);\r\n            },\r\n            error: function () {\r\n                console.error(\"Error: Could not fetch \" + global.id + \" routes database!\");\r\n                resolve(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.isDatabaseUpdateNeeded = function (resolve, reject, versionStr) {\r\n        $.ajax({\r\n            url: \"https://db.kmbeta.ml/hktransit_\" + global.id + \"-version.json\",\r\n            cache: false,\r\n            dataType: \"json\",\r\n            success: function (data) {\r\n                var lastUpdated;\r\n                var version;\r\n                try {\r\n                    lastUpdated = parseInt(data.version);\r\n                    version = parseInt(versionStr);\r\n                } catch (err) {\r\n                    console.error(\"Error: Could not parse hktransit_\" + global.id + \" routes last updated time or cached version! Forcing to be no update\");\r\n                    resolve(false);\r\n                }\r\n                resolve(lastUpdated > version);\r\n            },\r\n            error: function (err) {\r\n                console.error(\"Error: Could not check hktransit_\" + global.id + \" routes update!\");\r\n                //reject(err);\r\n                resolve(false);\r\n            }\r\n        });\r\n        resolve(true);\r\n    };\r\n};\r\n\r\nvar HkTransitStopsProvider = function () {\r\n    var global = this;\r\n\r\n    this.fetchDatabase = function (resolve, reject) {\r\n        $.ajax({\r\n            url: \"https://db.kmbeta.ml/hktransit_\" + global.id + \".json\",\r\n            cache: false,\r\n            dataType: \"json\",\r\n            success: function (db) {\r\n                resolve(db);\r\n            },\r\n            error: function () {\r\n                console.error(\"Error: Could not fetch \" + global.id + \" stops database!\");\r\n                resolve(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.isDatabaseUpdateNeeded = function (resolve, reject, versionStr) {\r\n        $.ajax({\r\n            url: \"https://db.kmbeta.ml/hktransit_\" + global.id + \"-version.json\",\r\n            cache: false,\r\n            dataType: \"json\",\r\n            success: function (data) {\r\n                var lastUpdated;\r\n                var version;\r\n                try {\r\n                    lastUpdated = parseInt(data.version);\r\n                    version = parseInt(versionStr);\r\n                } catch (err) {\r\n                    console.error(\"Error: Could not parse hktransit_\" + global.id + \" stops last updated time or cached version! Forcing to be no update\");\r\n                    resolve(false);\r\n                }\r\n                resolve(lastUpdated > version);\r\n            },\r\n            error: function (err) {\r\n                console.error(\"Error: Could not check hktransit_\" + global.id + \" stops update!\");\r\n                //reject(err);\r\n                resolve(false);\r\n            }\r\n        });\r\n        resolve(true);\r\n    };\r\n};"],"sourceRoot":""}