{"version":3,"sources":["webpack:///./src/plugins/gtwp-kmb/index.js"],"names":["onload","TransitType","BUS","default","en","zh","KmbProvider","this","fetchDatabase","resolve","reject","$","ajax","url","cache","dataType","success","db","error","err","isDatabaseUpdateNeeded","versionStr","data","lastUpdated","version","parseInt","console","getStopIndex","routeId","stopId","selectedPath","route","getRoute","stop","getStop","paths","length","path","i","fetchEta","opt","dbRoute","dbStop","refRoute","getRouteById","routeName","dbIndex","refStopId","getStopById","srvTime","s","response","generated","Date","resp","sche","text","t","toLowerCase","includes","type","provider","isLive","isOutdated","hr","substring","min","time","updated","setHours","setMinutes","msg","hasTime","getTime","serverTime","features","push","options","schedules"],"mappings":"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","file":"2.7bc819c13052da5dc1c0.js","sourcesContent":["//GTW KMB Plugin\r\n\r\nimport * as Cors from '../../gtw-cors';\r\nimport * as Lang from '../../gtw-lang';\r\nimport * as Transit from '../../gtw-citydata-transit';\r\nimport * as TransitRoutes from '../../gtw-citydata-transit-routes';\r\nimport * as TransitStops from '../../gtw-citydata-transit-stops';\r\nimport * as TransitEta from '../../gtw-citydata-transit-eta';\r\nimport * as RequestLimiter from '../../gtw-requestlimiter';\r\n\r\nexport function onload() {\r\n    Cors.register(\"db.kmbeta.ml\", true);\r\n    Cors.register(\"etav3.kmb.hk\", false);\r\n    Cors.register(\"search.kmb.hk\", false);\r\n\r\n    TransitEta.registerProvider(TransitType.BUS, \"KMB\", {\r\n        default: \"KMB\",\r\n        en: \"KMB\",\r\n        zh: \"九巴\"\r\n    }, new KmbProvider());\r\n    return true;\r\n};\r\n\r\nvar KmbProvider = function () {\r\n    var global = this;\r\n\r\n    this.fetchDatabase = function (resolve, reject) {\r\n        $.ajax({\r\n            url: \"https://db.kmbeta.ml/kmbeta_db.json\",\r\n            cache: true,\r\n            dataType: \"json\",\r\n            success: function (db) {\r\n                resolve(db);\r\n            },\r\n            error: function (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.isDatabaseUpdateNeeded = function (resolve, reject, versionStr) {\r\n        $.ajax({\r\n            url: \"https://db.kmbeta.ml/kmbeta_db-version.json\",\r\n            cache: false,\r\n            dataType: \"json\",\r\n            success: function (data) {\r\n                var lastUpdated;\r\n                var version;\r\n                try {\r\n                    lastUpdated = parseInt(data.version);\r\n                    version = parseInt(versionStr);\r\n                } catch (err) {\r\n                    console.error(\"Error: Could not parse kmbeta_db last updated time or cached version! Forcing to be no update\");\r\n                    resolve(false);\r\n                }\r\n                resolve(lastUpdated > version);\r\n            },\r\n            error: function (err) {\r\n                console.error(\"Error: Could not check kmbeta_db update!\");\r\n                //reject(err);\r\n                resolve(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.getStopIndex = function (routeId, stopId, selectedPath) {\r\n        var route = this.getRoute(routeId);\r\n        var stop = this.getStop(stopId);\r\n        if (!route || !stop) {\r\n            return -1;\r\n        }\r\n\r\n        if (selectedPath < 0 || selectedPath >= route.paths.length) {\r\n            return -1;\r\n        }\r\n        var path = route.paths[selectedPath];\r\n        for (var i = 0; i < path.length; i++) {\r\n            var stopId = path[i];\r\n            if (stop.stopId === stopId) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    this.fetchEta = function (resolve, reject, opt) {\r\n        var dbRoute = TransitRoutes.getRouteById(opt.routeId);\r\n        var dbStop = TransitStops.getStopById(opt.stopId);\r\n        var refRoute = this.getRouteById(dbRoute.routeName);\r\n        if (!refRoute) {\r\n            console.error(\"Error: Could not get KMB reference by database route name. Aborting fetch ETA.\");\r\n            reject();\r\n            return;\r\n        } else if (refRoute.paths.length !== dbRoute.paths.length || opt.selectedPath >= refRoute.paths.length) {\r\n            console.error(\"Error: KMB reference database mismatch. Aborting fetch ETA.\");\r\n            reject();\r\n            return;\r\n        }\r\n\r\n        var dbIndex = Transit.getStopIndex(dbRoute, dbStop, opt.selectedPath);\r\n        var refStopId = refRoute.paths[opt.selectedPath][dbIndex];\r\n        var refStop = this.getStopById(refStopId);\r\n\r\n        if (!refStop) {\r\n            console.error(\"Error: Could not get CTBNWFB reference stop. Aborting fetch ETA.\");\r\n            reject();\r\n            return;\r\n        }\r\n\r\n        var locale = Lang.getLocale();\r\n\r\n        var lang;\r\n        if (locale === \"zh\") {\r\n            lang = \"tc\";\r\n        } else {\r\n            lang = \"en\";\r\n        }\r\n\r\n        var url =\r\n            \"http://etav3.kmb.hk/\" +\r\n            \"?action=geteta\" +\r\n            \"&lang=\" + lang +\r\n            \"&route=\" + refRoute.routeId +\r\n            \"&bound=\" + (opt.selectedPath + 1) +\r\n            \"&stop=\" + refStopId +\r\n            \"&stop_seq=\" + (dbIndex + 1);\r\n\r\n        RequestLimiter.queue(function () {\r\n            $.ajax({\r\n                url: url,\r\n                dataType: \"json\",\r\n                cache: false,\r\n                success: function (data) {\r\n                    var s = [];\r\n                    if (data && data.response) {\r\n                        var srvTime;\r\n                        if (data && data.generated) {\r\n                            //TODO: Fetch from server\r\n                            srvTime = new Date(data.generated);\r\n                        } else {\r\n                            //Fallback to use computer time\r\n                            srvTime = new Date();\r\n                        }\r\n\r\n                        var i;\r\n                        for (i = 0; i < data.response.length; i++) {\r\n                            var resp = data.response[i];\r\n                            var sche = {};\r\n\r\n                            var text = resp.t.toLowerCase();\r\n                            if (text.includes(\"城巴\") || text.includes(\"新巴\") || text.includes(\"kmb\") || text.includes(\"ctb\")) {\r\n                                continue;\r\n                            }\r\n\r\n                            sche.type = TransitType.BUS;\r\n                            sche.provider = \"KMB\";\r\n\r\n                            sche.isLive = !text.includes(\"scheduled\") && !text.includes(\"預定班次\");\r\n                            sche.isOutdated = false;\r\n\r\n                            var hr = parseInt(text.substring(0, 2));\r\n                            var min = parseInt(text.substring(3, 5));\r\n\r\n                            var time = new Date(data.updated);\r\n                            time.setHours(hr);\r\n                            time.setMinutes(min);\r\n\r\n                            if (hr !== hr || min !== min) {\r\n                                sche.msg = resp.t;\r\n                            } else {\r\n                                sche.hasTime = true;\r\n                                sche.time = time.getTime();\r\n                            }\r\n\r\n                            sche.serverTime = srvTime.getTime();\r\n\r\n                            sche.features = false;\r\n                            s.push(sche);\r\n                        }\r\n                    }\r\n\r\n                    resolve({\r\n                        options: opt,\r\n                        schedules: s\r\n                    });\r\n                },\r\n                error: function (err) {\r\n                    reject(opt, err);\r\n                }\r\n            });\r\n        });\r\n    };\r\n};"],"sourceRoot":""}