{"version":3,"sources":["webpack:///./src/plugins/gtwp-ctbnwfb/index.js"],"names":["parseIsoDatetime","dtstr","dt","split","map","parseFloat","Date","onload","TransitType","BUS","default","en","zh","CtbProvider","NwfbProvider","shared_fetchEta","provider","company","resolve","reject","opt","dbRoute","routeId","dbStop","stopId","refRoute","getRouteById","routeName","console","error","paths","length","selectedPath","dbIndex","refStopId","refStop","getStopById","url","$","ajax","dataType","cache","success","data","i","sche","srvTime","s","sches","eta","options","type","serverTime","getTime","rmk","lang","locale","msg","ms","isNaN","time","push","schedules","shared_getEta","err0","err1","err2","shared_isDatabaseUpdateNeeded","versionStr","lastUpdated","version","parseInt","err","shared_fetchDatabase","routes","stops","outRoutes","shared_processDb","this","fetchDatabase","isDatabaseUpdateNeeded","fetchEta","etaHandler"],"mappings":"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","file":"0.a20c1486567220f4b19d.js","sourcesContent":["﻿//GTWP NWST Plugin\r\nimport * as Cors from '../../gtw-cors';\r\nimport * as Lang from '../../gtw-lang';\r\nimport * as Transit from '../../gtw-citydata-transit';\r\nimport * as TransitRoutes from '../../gtw-citydata-transit-routes';\r\nimport * as TransitStops from '../../gtw-citydata-transit-stops';\r\nimport * as TransitEta from '../../gtw-citydata-transit-eta';\r\n\r\nfunction parseIsoDatetime(dtstr) {\r\n    var dt = dtstr.split(/[: T-]/).map(parseFloat);\r\n    return new Date(dt[0], dt[1] - 1, dt[2], dt[3] || 0, dt[4] || 0, dt[5] || 0, 0);\r\n}\r\n\r\nexport function onload() {\r\n    Cors.register(\"db.kmbeta.ml\", true);\r\n    Cors.register(\"rt.data.gov.hk\", true);\r\n    TransitEta.registerProvider(TransitType.BUS, \"CTB\", {\r\n        default: \"CTB\",\r\n        en: \"CTB\",\r\n        zh: \"城巴\"\r\n    }, new CtbProvider());\r\n    TransitEta.registerProvider(TransitType.BUS, \"NWFB\", {\r\n        default: \"NWFB\",\r\n        en: \"NWFB\",\r\n        zh: \"新巴\"\r\n    }, new NwfbProvider());\r\n    return true;\r\n};\r\n\r\nvar shared_processDb = function (data, company) {\r\n    var routes = data.routes;\r\n    var stops = data.stops;\r\n    var outRoutes = [];\r\n\r\n    var i;\r\n    for (i = 0; i < routes.length; i++) {\r\n        if (routes[i].provider == company) {\r\n            outRoutes.push(routes[i]);\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: data.type,\r\n        provider: company,\r\n        routes: outRoutes,\r\n        stops: stops,\r\n        version: data.version\r\n    };\r\n};\r\n\r\nvar shared_getEta = function (data, company, opt) {\r\n    var srvTime = new Date();\r\n    var s = [];\r\n\r\n    if (data) {\r\n        srvTime = parseIsoDatetime(data[\"generated_timestamp \"]);\r\n\r\n        var i;\r\n        var sche;\r\n        var sches = data.data;\r\n        for (i = 0; i < sches.length; i++) {\r\n            sche = sches[i];\r\n            if (!sche || sche === \"\") {\r\n                continue;\r\n            }\r\n\r\n            var eta = parseIsoDatetime(sche[\"eta\"]);\r\n\r\n            var options = {};\r\n\r\n            //Cannot determine Scheduled/Live time!\r\n            //options.isLive = true; //status[0].indexOf(\"Scheduled\") !== -1;\r\n\r\n            options.type = TransitType.BUS;\r\n            options.provider = company;\r\n            options.serverTime = srvTime.getTime();\r\n\r\n            var lang = Lang.getLanguage();\r\n            var locale = Lang.getLocale();\r\n            var rmk;\r\n            if (lang === \"zh-cn\") {\r\n                rmk = sche[\"rmk_sc\"];\r\n            } else if (lang === \"zh-hk\" || locale === \"zh\") {\r\n                rmk = sche[\"rmk_tc\"];\r\n            } else {\r\n                rmk = sche[\"rmk_en\"];\r\n            }\r\n\r\n            if (rmk) {\r\n                options.msg = rmk;\r\n            }\r\n\r\n            var ms = eta.getTime();\r\n            if (!isNaN(ms)) {\r\n                options.time = ms;\r\n            }\r\n\r\n            s.push(options);\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n    var out = {\r\n        options: opt,\r\n        schedules: s,\r\n        serverTime: srvTime.getTime()\r\n    };\r\n    return out;\r\n};\r\n\r\nvar shared_fetchEta = function (provider, company, resolve, reject, opt) {\r\n    var dbRoute = TransitRoutes.getRouteById(opt.routeId);\r\n    var dbStop = TransitStops.getStopById(opt.stopId);\r\n\r\n    var refRoute = provider.getRouteById(dbRoute.routeName);\r\n    if (!refRoute) {\r\n        console.error(\"Error: Could not get CTBNWFB reference by database route name. Aborting fetch ETA.\");\r\n        reject();\r\n        return;\r\n    } else if (refRoute.paths.length !== dbRoute.paths.length || opt.selectedPath >= refRoute.paths.length) {\r\n        console.error(\"Error: \" + dbRoute.routeName + \" CTBNWFB reference database mismatch. Aborting fetch ETA.\");\r\n        reject();\r\n        return;\r\n    }\r\n\r\n    var dbIndex = Transit.getStopIndex(dbRoute, dbStop, opt.selectedPath);\r\n    var refStopId = refRoute.paths[opt.selectedPath][dbIndex];\r\n    var refStop = provider.getStopById(refStopId);\r\n\r\n    if (!refStop) {\r\n        console.error(\"Error: Could not get \" + dbStop.stopId + \" CTBNWFB reference stop. Aborting fetch ETA.\");\r\n        reject();\r\n        return;\r\n    }\r\n\r\n    var url = \"https://rt.data.gov.hk/v1/transport/citybus-nwfb/eta/\" + company + \"/\" + refStop.stopId + \"/\" + refRoute.routeId;\r\n    $.ajax({\r\n        url: url,\r\n        dataType: \"json\",\r\n        cache: false,\r\n        success: function (data) {\r\n            resolve(shared_getEta(data, company, opt));\r\n        },\r\n        error: function (err0, err1, err2) {\r\n            reject();\r\n        }\r\n    });\r\n};\r\n\r\nvar shared_isDatabaseUpdateNeeded = function (resolve, reject, versionStr) {\r\n    $.ajax({\r\n        url: \"https://db.kmbeta.ml/ctbnwfb_db-version.json\",\r\n        cache: false,\r\n        dataType: \"json\",\r\n        success: function (data) {\r\n            var lastUpdated;\r\n            var version;\r\n            try {\r\n                lastUpdated = parseInt(data.version);\r\n                version = parseInt(versionStr);\r\n            } catch (err) {\r\n                console.error(\"Error: Could not parse ctbnwfb_db last updated time or cached version! Forcing to be no update\");\r\n                resolve(false);\r\n            }\r\n            resolve(lastUpdated > version);\r\n        },\r\n        error: function (err) {\r\n            console.error(\"Error: Could not check ctbnwfb_db update!\");\r\n            //reject(err);\r\n            resolve(false);\r\n        }\r\n    });\r\n};\r\n\r\nvar shared_fetchDatabase = function (resolve, reject, company) {\r\n    $.ajax({\r\n        url: \"https://db.kmbeta.ml/ctbnwfb_db.json\",\r\n        cache: false,\r\n        dataType: \"json\",\r\n        success: function (data) {\r\n            resolve(shared_processDb(data, company));\r\n        },\r\n        error: function (err, err1, err2) {\r\n            reject();\r\n        }\r\n    });\r\n};\r\n\r\nvar CtbProvider = function () {\r\n    this.fetchDatabase = function (resolve, reject) {\r\n        shared_fetchDatabase(resolve, reject, \"CTB\");\r\n    }\r\n\r\n    this.isDatabaseUpdateNeeded = function (resolve, reject, version) {\r\n        shared_isDatabaseUpdateNeeded(resolve, reject, version);\r\n    };\r\n\r\n    this.fetchEta = function (resolve, reject, etaHandler) {\r\n        shared_fetchEta(this, \"CTB\", resolve, reject, etaHandler);\r\n    };\r\n};\r\n\r\nvar NwfbProvider = function () {\r\n    this.fetchDatabase = function (resolve, reject) {\r\n        shared_fetchDatabase(resolve, reject, \"NWFB\");\r\n    };\r\n\r\n    this.isDatabaseUpdateNeeded = function (resolve, reject, version) {\r\n        shared_isDatabaseUpdateNeeded(resolve, reject, version);\r\n    };\r\n\r\n    this.fetchEta = function (resolve, reject, etaHandler) {\r\n        shared_fetchEta(this, \"NWFB\", resolve, reject, etaHandler);\r\n    };\r\n};"],"sourceRoot":""}