{"version":3,"sources":["webpack:///./src/plugins/gtwp-ctbnwfb/index.js"],"names":["onload","CtbNwfbEtaProvider","this","checkDatabaseUpdate","resolve","reject","localVer","$","ajax","url","cache","dataType","success","data","lastUpdatedInt","localVerInt","parseInt","version","err","console","error","getRefStopId","stopName","toUpperCase","split","stop","db","stops","includes","stopId","fetchEta","options","agencyId","agency","multi","splits","then","etaAgency","refStopId","route","method","resp","etaTime","sche","dtstr","dt","entities","updates","alerts","tripDesc","trip","sches","length","i","map","parseFloat","Date","push","time","getTime","transText","text","language","informedEntity","headerText","translation","descriptionText","now","vehicleDesc","label","entity","id","tripUpdate","stopTimeUpdate","vehicle","alert","header","gtfsRealtimeVersion","incrementality","timestamp","err0","err1","err2","fetchDatabase","routes"],"mappings":"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","file":"45.7cc9a26a226b2f507371.js","sourcesContent":["//GTWP CTBNWFB ETA Plugin\r\n\r\nimport * as TransitEta from '../../gtw-citydata-transit-eta';\r\nimport * as Cors from '../../gtw-cors';\r\nimport * as gtfs from '../../gtw-citydata-transit-gtfs';\r\nimport * as Lang from '../../gtw-lang';\r\n\r\nexport function onload() {\r\n    Cors.register(\"db.kmbeta.ml\", true);\r\n    Cors.register(\"rt.data.gov.hk\", true);\r\n    TransitEta.registerProvider(\"gtwp-ctbnwfb\", \"ctbnwfb\", [\"CTB\", \"NWFB\"], new CtbNwfbEtaProvider());\r\n    return true;\r\n}\r\n\r\nfunction parseIsoDatetime(dtstr) {\r\n    var dt = dtstr.split(/[: T-]/).map(parseFloat);\r\n    return new Date(dt[0], dt[1] - 1, dt[2], dt[3] || 0, dt[4] || 0, dt[5] || 0, 0);\r\n}\r\n\r\nvar CtbNwfbEtaProvider = function () {\r\n\r\n    this.checkDatabaseUpdate = function (resolve, reject, localVer) {\r\n        $.ajax({\r\n            url: \"https://db.kmbeta.ml/ctbnwfb_db-version.json\",\r\n            cache: false,\r\n            dataType: \"json\",\r\n            success: function (data) {\r\n                var lastUpdatedInt;\r\n                var localVerInt;\r\n                try {\r\n                    lastUpdatedInt = parseInt(data.version);\r\n                    localVerInt = parseInt(localVer);\r\n                } catch (err) {\r\n                    console.error(\"Error: Could not parse ctbnwfb_db last updated time or cached version! Forcing to be no update\");\r\n                    resolve(false);\r\n                }\r\n                resolve(lastUpdatedInt > localVerInt);\r\n            },\r\n            error: function (err) {\r\n                console.error(\"Error: Could not check ctbnwfb_db update!\");\r\n                resolve(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.getRefStopId = function (stopName) {\r\n        stopName = stopName.toUpperCase();\r\n        var splits = stopName.split(\"\\/\");\r\n        for (var stop of this.db.stops) {\r\n            if (stopName.includes(stop.stopName.toUpperCase())) {\r\n                return stop.stopId;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.fetchEta = function (resolve, reject, options) {\r\n        var agencyId = options.agency[\"agency_id\"];\r\n        var multi = false;\r\n        if (agencyId.includes(\"+\")) {\r\n            multi = true;\r\n            var splits = agencyId.split(\"+\");\r\n            for (var split of splits) {\r\n                if (split === \"CTB\" || split === \"NWFB\") {\r\n                    agencyId = split;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (agencyId !== \"CTB\" && agencyId !== \"NWFB\") {\r\n            console.error(\"Error: Cannot request ETA from companies that are not CTB and NWFB! Requested: \" + agencyId);\r\n            reject();\r\n            return;\r\n        }\r\n\r\n        gtfs.getAgency(\"gtwp-hktransit\", \"hktransit\", agencyId).then(etaAgency => {\r\n            var stopId = options.stop[\"stop_id\"];\r\n            var stopName = gtfs.selectAgencyStopName(agencyId, options.stop[\"stop_name\"]);\r\n            var refStopId = this.getRefStopId(stopName);\r\n\r\n            if (!refStopId) {\r\n                console.error(\"Error: Could not find CTBNWFB reference stop ID using \" + stopName);\r\n                reject();\r\n                return;\r\n            }\r\n\r\n            var url = \"https://rt.data.gov.hk/v1/transport/citybus-nwfb/eta/\" + agencyId + \"/\" + refStopId + \"/\" + options.route[\"route_short_name\"];\r\n            $.ajax({\r\n                url: url,\r\n                method: \"GET\",\r\n                dataType: \"json\",\r\n                cache: false,\r\n                success: function (resp) {\r\n                    var entities = [];\r\n\r\n                    var updates = [];\r\n                    var alerts = [];\r\n\r\n                    //TODO get start_time and start_date from gtfs db\r\n                    var tripDesc = {\r\n                        \"tripId\": options.trip[\"trip_id\"],\r\n                        \"startTime\": \"00:00:00\",\r\n                        \"startDate\": \"20190101\"\r\n                    };\r\n\r\n                    var sches = resp.data;\r\n                    if (sches.length > 0) {\r\n                        var i;\r\n                        var etaTime;\r\n                        var sche;\r\n                        for (i = 0; i < sches.length; i++) {\r\n                            sche = sches[i];\r\n\r\n                            if (sche[\"eta\"] && sche[\"eta\"] !== \"\") {\r\n                                etaTime = parseIsoDatetime(sche[\"eta\"]);\r\n                                updates.push({\r\n                                    \"stopId\": stopId,\r\n                                    \"arrival\": {\r\n                                        time: etaTime.getTime()\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            if ((sche[\"rmk_en\"] && sche[\"rmk_en\"] !== \"\") ||\r\n                                (sche[\"rmk_tc\"] && sche[\"rmk_tc\"] !== \"\") ||\r\n                                (sche[\"rmk_sc\"] && sche[\"rmk_sc\"] !== \"\")) {\r\n                                var transText = [\r\n                                    {\r\n                                        text: sche[\"rmk_en\"],\r\n                                        language: \"en\"\r\n                                    },\r\n                                    {\r\n                                        text: sche[\"rmk_tc\"],\r\n                                        language: \"zh-HK\"\r\n                                    },\r\n                                    {\r\n                                        text: sche[\"rmk_sc\"],\r\n                                        language: \"zh-CN\"\r\n                                    }\r\n                                ];\r\n                                alerts.push({\r\n                                    informedEntity: [\r\n                                        {\r\n                                            trip: tripDesc,\r\n                                            stopId: stopId\r\n                                        }\r\n                                    ],\r\n                                    headerText: {\r\n                                        translation: transText\r\n                                    },\r\n                                    descriptionText: {\r\n                                        translation: transText\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    var time = Date.now();\r\n                    if (updates.length > 0) {\r\n                        var vehicleDesc = {\r\n                            label: Lang.localizedKey(etaAgency, \"agency_short_name\")\r\n                        };\r\n\r\n                        var entityId = options.agency[\"agency_id\"] + \"-\" + options.stop[\"stop_id\"] + \"-\" + options.route[\"route_short_name\"] + \"-trip-update-\" + time;\r\n                        var entity = {\r\n                            id: entityId,\r\n                            tripUpdate: {\r\n                                trip: tripDesc,\r\n                                stopTimeUpdate: updates\r\n                            }\r\n                        };\r\n\r\n                        if (multi) {\r\n                            entity.vehicle = {\r\n                                vehicle: vehicleDesc\r\n                            };\r\n                        }\r\n\r\n                        entities.push(entity);\r\n                    }\r\n\r\n                    if (alerts.length > 0) {\r\n                        var i;\r\n                        for (i = 0; i < alerts.length; i++) {\r\n                            var entityId = options.agency[\"agency_id\"] + \"-\" + options.stop[\"stop_id\"] + \"-\" + options.route[\"route_short_name\"] + \"-alert-\" + i + \"-\" + time;\r\n                            var entity = {\r\n                                id: entityId,\r\n                                alert: alerts[i]\r\n                            };\r\n                            entities.push(entity);\r\n                        }\r\n                    }\r\n\r\n                    var feed = {\r\n                        header: {\r\n                            gtfsRealtimeVersion: \"2.0\",\r\n                            incrementality: \"FULL_DATASET\",\r\n                            timestamp: time\r\n                        },\r\n                        entity: entities\r\n                    };\r\n                    resolve(feed);\r\n                },\r\n                error: function (err0, err1, err2) {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    this.fetchDatabase = function (resolve, reject) {\r\n        $.ajax({\r\n            url: \"https://db.kmbeta.ml/ctbnwfb_db.json\",\r\n            cache: false,\r\n            dataType: \"json\",\r\n            success: function (data) {\r\n                if (!data.routes || !data.stops || !data.version) {\r\n                    console.error(\"Error: CTBNWFB downloaded database is in wrong structure! Report to GitHub for this problem!\");\r\n                    return;\r\n                }\r\n                data[\"package\"] = \"gtwp-ctbnwfb\";\r\n                data[\"provider\"] = \"ctbnwfb\";\r\n                resolve(data);\r\n            },\r\n            error: function (err, err1, err2) {\r\n                reject();\r\n            }\r\n        });\r\n    };\r\n};"],"sourceRoot":""}