{"version":3,"sources":["webpack:///./src/plugins/gtwp-hktransit/index.js"],"names":["onload","HkTransitGtfsProvider","window","JSZip","JSZipUtils","this","checkDatabaseUpdate","resolve","reject","localVer","$","ajax","url","cache","dataType","success","data","lastUpdatedInt","localVerInt","parseInt","version","err","console","error","fetchDatabase","getBinaryContent","loadAsync","then"],"mappings":"2FAAA,+GAcO,SAASA,IAGZ,OAFA,WAAc,gBAAgB,GAC9B,IAAyB,iBAAkB,YAAa,IAAIC,IACrD,EAXXC,OAAOC,MAAQ,IACfD,OAAOE,WAAa,IAapB,IAAIH,EAAwB,WAExBI,KAAKC,oBAAsB,SAAUC,EAASC,EAAQC,GAClDC,EAAEC,KAAK,CACHC,IAAK,mDACLC,OAAO,EACPC,SAAU,OACVC,QAAS,SAAUC,GACf,IAAIC,EACAC,EACJ,IACID,EAAiBE,SAASH,EAAKI,SAC/BF,EAAcC,SAASV,GACzB,MAAOY,GACLC,QAAQC,MAAM,sGACdhB,GAAQ,GAEZA,EAAQU,EAAiBC,IAE7BK,MAAO,SAAUF,GACbC,QAAQC,MAAM,iDACdhB,GAAQ,OAKpBF,KAAKmB,cAAgB,SAAUjB,EAASC,GACpC,IAAWiB,iBAAiB,2CAA2C,SAAUJ,EAAKL,GAClF,GAAIK,EAGA,OAFAC,QAAQC,MAAMF,QACdb,EAAOa,IAGD,IAAI,KACVK,UAAUV,GAAMW,KAAKpB,S","file":"48.ef4e535ea88ff549a23a.js","sourcesContent":["//GTWP HK Transit Plugin\r\n\r\nimport * as Cors from '../../gtw-cors';\r\nimport * as Transit from '../../gtw-citydata-transit';\r\nimport JSZip from 'jszip';\r\nimport JSZipUtils from 'jszip-utils';\r\nwindow.JSZip = JSZip;\r\nwindow.JSZipUtils = JSZipUtils;\r\n\r\nfunction parseIsoDatetime(dtstr) {\r\n    var dt = dtstr.split(/[: T-]/).map(parseFloat);\r\n    return new Date(dt[0], dt[1] - 1, dt[2], dt[3] || 0, dt[4] || 0, dt[5] || 0, 0);\r\n}\r\n\r\nexport function onload() {\r\n    Cors.register(\"db.kmbeta.ml\", true);\r\n    Transit.registerProvider(\"gtwp-hktransit\", \"hktransit\", new HkTransitGtfsProvider());\r\n    return true;\r\n};\r\n\r\nvar HkTransitGtfsProvider = function () {\r\n\r\n    this.checkDatabaseUpdate = function (resolve, reject, localVer) {\r\n        $.ajax({\r\n            url: \"https://db.kmbeta.ml/hktransit_gtfs-version.json\",\r\n            cache: false,\r\n            dataType: \"json\",\r\n            success: function (data) {\r\n                var lastUpdatedInt;\r\n                var localVerInt;\r\n                try {\r\n                    lastUpdatedInt = parseInt(data.version);\r\n                    localVerInt = parseInt(localVer);\r\n                } catch (err) {\r\n                    console.error(\"Error: Could not parse hktransit_gtfs last updated time or cached version! Forcing to be no update\");\r\n                    resolve(false);\r\n                }\r\n                resolve(lastUpdatedInt > localVerInt);\r\n            },\r\n            error: function (err) {\r\n                console.error(\"Error: Could not check hktransit_gtfs update!\");\r\n                resolve(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    this.fetchDatabase = function (resolve, reject) {\r\n        JSZipUtils.getBinaryContent(\"https://db.kmbeta.ml/hktransit_gtfs.zip\", function (err, data) {\r\n            if (err) {\r\n                console.error(err);\r\n                reject(err);\r\n                return;\r\n            }\r\n            var zip = new JSZip();\r\n            zip.loadAsync(data).then(resolve);\r\n        });\r\n    };\r\n\r\n};"],"sourceRoot":""}