{"version":3,"sources":["webpack:///./src/gtw-map-googlemap.js"],"names":["markerInc","markers","infoWindowInc","infoWindows","polylineInc","polylines","map","init","Promise","resolve","reject","$","html","window","initMap","google","maps","Map","document","getElementById","center","zoom","disableDefaultUI","apiKey","googleMapApiKey","location","origin","startsWith","console","warn","element","createElement","src","head","appendChild","setCenter","coords","setZoom","addMarker","position","title","label","onClickFunc","marker","Marker","addListener","getMarker","markerId","removeMarker","setMap","removeAllMarkers","key","addInfoWindow","content","open","egetMarker","infowindow","InfoWindow","addPolyline","strokeColor","strokeWeight","strokeOpacity","geodesic","polyline","Polyline","path","removePolyline","polylineId","removeAllPolylines","fitBounds","bounds","out","LatLngBounds","bound","extend"],"mappings":"yFAAA,0lBAKIA,EAAY,EACZC,EAAU,GAEVC,EAAgB,EAChBC,EAAc,GAEdC,EAAc,EACdC,EAAY,GAELC,GAAM,EAEV,SAASC,IACZ,OAAO,IAAIC,QAAQ,CAACC,EAASC,KACzBC,EAAE,YAAYC,KAAK,4DAEnBC,OAAOC,QAAU,WACbR,EAAM,IAAIS,OAAOC,KAAKC,IAAIC,SAASC,eAAe,QAAS,CACvDC,OAAQ,MACRC,KAAM,GACNC,kBAAkB,IAEtBb,WACOI,OAAOC,SAGlB,IAAIS,EAAS,IAAOC,kBAEfX,OAAOY,SAASC,QAAqC,KAA3Bb,OAAOY,SAASC,QAA4C,YAA3Bb,OAAOY,SAASC,QAAwBb,OAAOY,SAASC,OAAOC,WAAW,qBAAuBd,OAAOY,SAASC,OAAOC,WAAW,wBAC/LJ,EAAS,GACTK,QAAQC,KAAK,kHAGjB,IAAIC,EAAUZ,SAASa,cAAc,UACrCD,EAAQE,IAAM,gEAAkET,EAChFL,SAASe,KAAKC,YAAYJ,KAI3B,SAASK,EAAUC,GACtB,OAAO9B,EAAI6B,UAAUC,GAGlB,SAASC,EAAQhB,GACpB,OAAOf,EAAI+B,QAAQhB,GAGhB,SAASiB,EAAUC,EAAUC,EAAOC,EAAOC,GAC9C,IAAIC,EAAS,IAAI5B,OAAOC,KAAK4B,OAAO,CAChCL,SAAUA,EACVE,MAAOA,EACPD,MAAOA,EACPlC,IAAKA,IAUT,OARAL,EAAQD,GAAa2C,EAEjBD,GACAC,EAAOE,YAAY,SAAS,WACxBH,OAID1C,IAGJ,SAAS8C,EAAUC,GACtB,SAAKA,IAAa9C,EAAQ8C,KAGnB9C,EAAQ8C,GAGZ,SAASC,EAAaD,GACzB,SAAKA,IAAa9C,EAAQ8C,MAG1B9C,EAAQ8C,GAAUE,OAAO,aAClBhD,EAAQ8C,IACR,GAGJ,SAASG,IACZ,IAAK,IAAIC,KAAOlD,EACZA,EAAQkD,GAAKF,OAAO,MAGxB,OADAhD,EAAU,IACH,EAGJ,SAASmD,EAAcL,EAAUM,EAASC,GAAO,GACpD,IAAIX,EAASY,WAAWR,GACxB,IAAKJ,EACD,OAAO,EAGX,IAAIa,EAAa,IAAIzC,OAAOC,KAAKyC,WAAW,CACxCJ,QAASA,IAYb,OATAV,EAAOE,YAAY,SAAS,WACxBW,EAAWF,KAAKhD,EAAKqC,MAGrBW,GACAE,EAAWF,KAAKhD,EAAKqC,GAGzBxC,EAAYD,GAAiBsD,EACtBtD,IAGJ,SAASwD,EAAYtB,EAAQuB,EAAaC,EAAcC,EAAgB,EAAKC,GAAW,GAC3F,IAAIC,EAAW,IAAIhD,OAAOC,KAAKgD,SAAS,CACpCC,KAAM7B,EACN0B,SAAUA,EACVH,YAAaA,EACbE,cAAeA,EACfD,aAAcA,IAMlB,OAHAG,EAASd,OAAO3C,GAEhBD,EAAUD,GAAe2D,EAClB3D,IAGJ,SAAS8D,EAAeC,GAC3B,SAAKA,IAAe9D,EAAU8D,MAG9B9D,EAAU8D,GAAYlB,OAAO,aACtB5C,EAAU8D,IACV,GAGJ,SAASC,IACZ,IAAK,IAAIjB,KAAO9C,EACZA,EAAU8C,GAAKF,OAAO,MAG1B,OADA5C,EAAY,IACL,EAGJ,SAASgE,EAAUC,GACtB,IAAIC,EAAM,IAAIxD,OAAOC,KAAKwD,aAC1B,IAAK,IAAIC,KAASH,EACdC,EAAIG,OAAOD,GAEfnE,EAAI+D,UAAUE,K","file":"5.a5057546fa96775b094d.js","sourcesContent":["//GTW Map source code\r\n\r\nimport config from './gtw-config';\r\nimport * as loc from './gtw-location';\r\n\r\nvar markerInc = 1;\r\nvar markers = {};\r\n\r\nvar infoWindowInc = 1;\r\nvar infoWindows = {};\r\n\r\nvar polylineInc = 1;\r\nvar polylines = {};\r\n\r\nexport var map = false;\r\n\r\nexport function init() {\r\n    return new Promise((resolve, reject) => {\r\n        $(\"#gtw-map\").html(\"<div id=\\\"gmap\\\" style=\\\"width: 100%; height: 100%;\\\"></div>\");\r\n        //Required callback function from the API\r\n        window.initMap = function () {\r\n            map = new google.maps.Map(document.getElementById(\"gmap\"), {\r\n                center: loc.getCurrentPosition(),\r\n                zoom: 12,\r\n                disableDefaultUI: true\r\n            });\r\n            resolve();\r\n            delete window.initMap;\r\n        };\r\n\r\n        var apiKey = config.googleMapApiKey;\r\n\r\n        if (!window.location.origin || window.location.origin === \"\" || window.location.origin === \"file://\" || window.location.origin.startsWith(\"http://localhost\") || window.location.origin.startsWith(\"https://localhost\")) {\r\n            apiKey = \"\";\r\n            console.warn(\"gtw-map-googlemap: You are running the application in local/no-origin mode. The API key has been removed now.\");\r\n        }\r\n\r\n        var element = document.createElement(\"script\");\r\n        element.src = \"https://maps.googleapis.com/maps/api/js?callback=initMap&key=\" + apiKey;\r\n        document.head.appendChild(element);\r\n    });\r\n}\r\n\r\nexport function setCenter(coords) {\r\n    return map.setCenter(coords);\r\n}\r\n\r\nexport function setZoom(zoom) {\r\n    return map.setZoom(zoom);\r\n}\r\n\r\nexport function addMarker(position, title, label, onClickFunc) {\r\n    var marker = new google.maps.Marker({\r\n        position: position,\r\n        label: label,\r\n        title: title,\r\n        map: map\r\n    });\r\n    markers[markerInc] = marker;\r\n\r\n    if (onClickFunc) {\r\n        marker.addListener(\"click\", function () {\r\n            onClickFunc();\r\n        });\r\n    }\r\n\r\n    return markerInc++;\r\n}\r\n\r\nexport function getMarker(markerId) {\r\n    if (!markerId || !markers[markerId]) {\r\n        return false;\r\n    }\r\n    return markers[markerId];\r\n}\r\n\r\nexport function removeMarker(markerId) {\r\n    if (!markerId || !markers[markerId]) {\r\n        return false;\r\n    }\r\n    markers[markerId].setMap(null);\r\n    delete markers[markerId];\r\n    return true;\r\n}\r\n\r\nexport function removeAllMarkers() {\r\n    for (var key in markers) {\r\n        markers[key].setMap(null);\r\n    }\r\n    markers = {};\r\n    return true;\r\n}\r\n\r\nexport function addInfoWindow(markerId, content, open = false) {\r\n    var marker = egetMarker(markerId);\r\n    if (!marker) {\r\n        return false;\r\n    }\r\n\r\n    var infowindow = new google.maps.InfoWindow({\r\n        content: content\r\n    });\r\n\r\n    marker.addListener(\"click\", function () {\r\n        infowindow.open(map, marker);\r\n    });\r\n\r\n    if (open) {\r\n        infowindow.open(map, marker);\r\n    }\r\n\r\n    infoWindows[infoWindowInc] = infowindow;\r\n    return infoWindowInc++;\r\n}\r\n\r\nexport function addPolyline(coords, strokeColor, strokeWeight, strokeOpacity = 1.0, geodesic = true) {\r\n    var polyline = new google.maps.Polyline({\r\n        path: coords,\r\n        geodesic: geodesic,\r\n        strokeColor: strokeColor,\r\n        strokeOpacity: strokeOpacity,\r\n        strokeWeight: strokeWeight\r\n    });\r\n\r\n    polyline.setMap(map);\r\n\r\n    polylines[polylineInc] = polyline;\r\n    return polylineInc++;\r\n}\r\n\r\nexport function removePolyline(polylineId) {\r\n    if (!polylineId || !polylines[polylineId]) {\r\n        return false;\r\n    }\r\n    polylines[polylineId].setMap(null);\r\n    delete polylines[polylineId];\r\n    return true;\r\n}\r\n\r\nexport function removeAllPolylines() {\r\n    for (var key in polylines) {\r\n        polylines[key].setMap(null);\r\n    }\r\n    polylines = {};\r\n    return true;\r\n}\r\n\r\nexport function fitBounds(bounds) {\r\n    var out = new google.maps.LatLngBounds();\r\n    for (var bound of bounds) {\r\n        out.extend(bound);\r\n    }\r\n    map.fitBounds(out);\r\n}"],"sourceRoot":""}