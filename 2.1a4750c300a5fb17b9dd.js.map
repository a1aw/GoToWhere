{"version":3,"sources":["webpack:///./src/gtw-map-googlemap.js"],"names":["markerInc","markers","lockedMarkers","infoWindowInc","infoWindows","polylineInc","polylines","lockedPolylines","map","init","Promise","resolve","reject","$","html","window","initMap","darkModeMapType","google","maps","Map","document","getElementById","center","zoom","disableDefaultUI","StyledMapType","elementType","stylers","color","featureType","mapTypes","set","checkIfDarkMode","apiKey","googleMapApiKey","location","origin","startsWith","console","warn","element","createElement","src","head","appendChild","setDarkMode","dark","setMapTypeId","matchMedia","matches","setCenter","coords","setZoom","addMarker","position","options","onClickFunc","marker","Marker","label","title","icon","addListener","setMarkerPosition","markerId","setPosition","getMarker","lockMarker","indexOf","push","unlockMarker","i","splice","removeMarker","includes","setMap","removeAllMarkers","key","parseInt","addInfoWindow","content","open","egetMarker","infowindow","InfoWindow","addPolyline","strokeColor","strokeWeight","strokeOpacity","geodesic","polyline","Polyline","path","lockPolyline","polylineId","unlockPolyline","removePolyline","removeAllPolylines","fitBounds","bounds","out","LatLngBounds","bound","extend"],"mappings":"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","file":"2.1a4750c300a5fb17b9dd.js","sourcesContent":["//GTW Map source code\r\n\r\nimport config from './gtw-config';\r\nimport * as loc from './gtw-location';\r\n\r\nvar markerInc = 1;\r\nvar markers = {};\r\nvar lockedMarkers = [];\r\n\r\nvar infoWindowInc = 1;\r\nvar infoWindows = {};\r\n\r\nvar polylineInc = 1;\r\nvar polylines = {};\r\nvar lockedPolylines = [];\r\n\r\nexport var map = false;\r\n\r\nexport function init() {\r\n    return new Promise((resolve, reject) => {\r\n        $(\"#gtw-map\").html(\"<div id=\\\"gmap\\\" style=\\\"width: 100%; height: 100%;\\\"></div>\");\r\n\r\n        //Required callback function from the API\r\n        window.initMap = function () {\r\n            map = new google.maps.Map(document.getElementById(\"gmap\"), {\r\n                center: loc.getCurrentPosition(),\r\n                zoom: 12,\r\n                disableDefaultUI: true\r\n            });\r\n            initDarkMode();\r\n            checkIfDarkMode();\r\n            resolve();\r\n            delete window.initMap;\r\n        };\r\n\r\n        var apiKey = config.googleMapApiKey;\r\n\r\n        if (!window.location.origin || window.location.origin === \"\" || window.location.origin !== \"https://www.gotowhere.ga\" || window.location.origin === \"file://\" || window.location.origin.startsWith(\"http://localhost\") || window.location.origin.startsWith(\"https://localhost\")) {\r\n            apiKey = \"\";\r\n            console.warn(\"gtw-map-googlemap: You are running the application in local/no-origin mode. The API key has been removed now.\");\r\n        }\r\n\r\n        var element = document.createElement(\"script\");\r\n        element.src = \"https://maps.googleapis.com/maps/api/js?callback=initMap&key=\" + apiKey;\r\n        document.head.appendChild(element);\r\n    });\r\n}\r\n\r\nfunction initDarkMode() {\r\n    var darkModeMapType = new google.maps.StyledMapType([\r\n        { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },\r\n        { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },\r\n        { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },\r\n        {\r\n            featureType: 'administrative.locality',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#d59563' }]\r\n        },\r\n        {\r\n            featureType: 'poi',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#d59563' }]\r\n        },\r\n        {\r\n            featureType: 'poi.park',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#263c3f' }]\r\n        },\r\n        {\r\n            featureType: 'poi.park',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#6b9a76' }]\r\n        },\r\n        {\r\n            featureType: 'road',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#38414e' }]\r\n        },\r\n        {\r\n            featureType: 'road',\r\n            elementType: 'geometry.stroke',\r\n            stylers: [{ color: '#212a37' }]\r\n        },\r\n        {\r\n            featureType: 'road',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#9ca5b3' }]\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#746855' }]\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'geometry.stroke',\r\n            stylers: [{ color: '#1f2835' }]\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#f3d19c' }]\r\n        },\r\n        {\r\n            featureType: 'transit',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#2f3948' }]\r\n        },\r\n        {\r\n            featureType: 'transit.station',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#d59563' }]\r\n        },\r\n        {\r\n            featureType: 'water',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#17263c' }]\r\n        },\r\n        {\r\n            featureType: 'water',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#515c6d' }]\r\n        },\r\n        {\r\n            featureType: 'water',\r\n            elementType: 'labels.text.stroke',\r\n            stylers: [{ color: '#17263c' }]\r\n        }\r\n    ]);\r\n    map.mapTypes.set(\"dark_mode\", darkModeMapType);\r\n}\r\n\r\nexport function setDarkMode(dark) {\r\n    if (dark) {\r\n        map.setMapTypeId(\"dark_mode\");\r\n    } else {\r\n        map.setMapTypeId(\"roadmap\");\r\n    }\r\n}\r\n\r\nexport function checkIfDarkMode() {\r\n    var darkMode = window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    setDarkMode(darkMode);\r\n}\r\n\r\nexport function setCenter(coords) {\r\n    return map.setCenter(coords);\r\n}\r\n\r\nexport function setZoom(zoom) {\r\n    return map.setZoom(zoom);\r\n}\r\n\r\nexport function addMarker(position, options, onClickFunc) {\r\n    var marker = new google.maps.Marker({\r\n        position: position,\r\n        label: options.label,\r\n        title: options.title,\r\n        icon: options.icon,\r\n        map: map\r\n    });\r\n    markers[markerInc] = marker;\r\n\r\n    if (onClickFunc) {\r\n        marker.addListener(\"click\", function () {\r\n            onClickFunc();\r\n        });\r\n    }\r\n\r\n    return markerInc++;\r\n}\r\n\r\nexport function setMarkerPosition(markerId, position) {\r\n    if (!markerId || !markers[markerId]) {\r\n        return false;\r\n    }\r\n    markers[markerId].setPosition(position);\r\n}\r\n\r\nexport function getMarker(markerId) {\r\n    if (!markerId || !markers[markerId]) {\r\n        return false;\r\n    }\r\n    return markers[markerId];\r\n}\r\n\r\nexport function lockMarker(markerId) {\r\n    if (!markerId || !markers[markerId]) {\r\n        return false;\r\n    }\r\n    if (lockedMarkers.indexOf(markerId) === -1) {\r\n        lockedMarkers.push(markerId);\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function unlockMarker(markerId) {\r\n    var i = lockedMarkers.indexOf(markerId);\r\n    if (i === -1) {\r\n        return false;\r\n    }\r\n    lockedMarkers.splice(i, 1);\r\n    return true;\r\n}\r\n\r\nexport function removeMarker(markerId) {\r\n    if (!markerId || !markers[markerId]) {\r\n        return false;\r\n    }\r\n    if (lockedMarkers.includes(markerId)) {\r\n        return false;\r\n    }\r\n    markers[markerId].setMap(null);\r\n    delete markers[markerId];\r\n    return true;\r\n}\r\n\r\nexport function removeAllMarkers() {\r\n    for (var key in markers) {\r\n        if (!lockedMarkers.includes(parseInt(key))) {\r\n            markers[key].setMap(null);\r\n        }\r\n    }\r\n    markers = {};\r\n    return true;\r\n}\r\n\r\nexport function addInfoWindow(markerId, content, open = false) {\r\n    var marker = egetMarker(markerId);\r\n    if (!marker) {\r\n        return false;\r\n    }\r\n\r\n    var infowindow = new google.maps.InfoWindow({\r\n        content: content\r\n    });\r\n\r\n    marker.addListener(\"click\", function () {\r\n        infowindow.open(map, marker);\r\n    });\r\n\r\n    if (open) {\r\n        infowindow.open(map, marker);\r\n    }\r\n\r\n    infoWindows[infoWindowInc] = infowindow;\r\n    return infoWindowInc++;\r\n}\r\n\r\nexport function addPolyline(coords, strokeColor, strokeWeight, strokeOpacity = 1.0, geodesic = true) {\r\n    var polyline = new google.maps.Polyline({\r\n        path: coords,\r\n        geodesic: geodesic,\r\n        strokeColor: strokeColor,\r\n        strokeOpacity: strokeOpacity,\r\n        strokeWeight: strokeWeight\r\n    });\r\n\r\n    polyline.setMap(map);\r\n\r\n    polylines[polylineInc] = polyline;\r\n    return polylineInc++;\r\n}\r\n\r\nexport function lockPolyline(polylineId) {\r\n    if (!polyline || !polylines[polylineId]) {\r\n        return false;\r\n    }\r\n    if (lockedPolylines.indexOf(polylineId) === -1) {\r\n        lockedPolylines.push(polylineId);\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function unlockPolyline(polylineId) {\r\n    var i = lockedPolylines.indexOf(polylineId);\r\n    if (i === -1) {\r\n        return false;\r\n    }\r\n    lockedPolylines.splice(i, 1);\r\n    return true;\r\n}\r\n\r\nexport function removePolyline(polylineId) {\r\n    if (!polylineId || !polylines[polylineId]) {\r\n        return false;\r\n    }\r\n    if (lockedPolylines.includes(polylineId)) {\r\n        return false;\r\n    }\r\n    polylines[polylineId].setMap(null);\r\n    delete polylines[polylineId];\r\n    return true;\r\n}\r\n\r\nexport function removeAllPolylines() {\r\n    for (var key in polylines) {\r\n        if (!lockedPolylines.includes(key)) {\r\n            polylines[key].setMap(null);\r\n        }\r\n    }\r\n    polylines = {};\r\n    return true;\r\n}\r\n\r\nexport function fitBounds(bounds) {\r\n    var out = new google.maps.LatLngBounds();\r\n    for (var bound of bounds) {\r\n        out.extend(bound);\r\n    }\r\n    map.fitBounds(out);\r\n}"],"sourceRoot":""}